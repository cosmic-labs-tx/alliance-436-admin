name: Deploy
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on: [push, workflow_dispatch]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to Vercel Preview
        id: "deploy-preview"
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Refresh Trigger.dev Jobs
        env:
          TRIGGER_ENDPOINT_HOOK: ${{ secrets.TRIGGER_ENDPOINT_HOOK_STAGING }}
        run: |
          curl -X POST $TRIGGER_ENDPOINT_HOOK_STAGING

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run E2E Tests Against Staging
        run: npx playwright test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ steps.deploy-preview.outputs.preview-url }}

      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"

      - name: Refresh Trigger.dev Jobs
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          TRIGGER_ENDPOINT_HOOK: ${{ secrets.TRIGGER_ENDPOINT_HOOK }}
        run: |
          curl -X POST $TRIGGER_ENDPOINT_HOOK
